---

# Trusting the kernel random generator with 25 characters
- name: Generate bootstrap password via kernel random generator
  shell: |
    if [ -f "/usr/share/elasticsearch/generated_passwords" ]; then
      password=$(grep "elasticsearch_bootstrap_pw" /usr/share/elasticsearch/generated_passwords | cut -d: -f2)
    else
      password=$(cat /proc/sys/kernel/random/uuid | tr -d '-' | head -c 25)
      echo "elastic_boostrap_pw:$password" > /usr/share/elasticsearch/generated_passwords
    fi
  register: result

# More secure version than the default one, includes random generated large characters and special characters 
#- name: Generate bootstrap password via kernel random generator
#  shell: |
#    # Check if the generated_passwords file exists.
#    if [ -f "/usr/share/elasticsearch/generated_passwords" ]; then
#      # If it exists, retrieve the password from the file.
#      password=$(grep "elasticsearch_bootstrap_pw" /usr/share/elasticsearch/generated_passwords | cut -d: -f2)
#    else
#      # If it doesn't exist, generate a new password:
#      # Generate 3 random digits between 0-9.
#      digits=$(shuf -i 0-9 -n 3 | tr -d '\n')
#      # Generate 3 random special characters from the provided set.
#      chars=$(echo -n '@!#$%^&*()?+' | fold -w 1 | shuf | head -n 3 | tr -d '\n')
#      # Generate 3 random letters for capitalization.
#      letters=$(echo {a..z} | tr ' ' '\n' | shuf -n 3 | tr -d '\n')
#      # Generate a UUID, process it, and make the desired character replacements.
#      password=$(cat /proc/sys/kernel/random/uuid | tr -d '-' | head -c 25)
#      for i in {0..2}; do
#        digit=${digits:$i:1} 
#        char=${chars:$i:1}
#        password=$(echo "$password" | sed "s/${digit}/${char}/g")
#      done
#      for i in {0..2}; do
#        letter=${letters:$i:1}
#        password=$(echo "$password" | sed "s/${letter}/$(echo ${letter} | tr 'a-z' 'A-Z')/g")
#      done
#      # Store the generated password in the generated_passwords file.
#      echo "elasticsearch_bootstrap_pw:$password" > /usr/share/elasticsearch/generated_passwords
#    fi
#    # Print the password to stdout, so it can be captured by the Ansible register command.
#    echo $password
#  register: result

- set_fact:
    elasticsearch_bootstrap_pw: "{{ result.stdout }}"